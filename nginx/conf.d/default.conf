server {
    listen 80;
    server_name localhost;  # Use this for local development

    # Define a variable for the allowed origins
    set $allowed_origins "https://versusnow.io, https://dev4launch.versusnow.io, https://meet-helping-cod.ngrok-free.app";
    
    # Allow access from a specific IP address
    set $allowed_ip "172.24.0.1";  # Replace with the admin's IP address
    set $tmp "1";

    location / {
        if ($tmp = "1") {
            proxy_pass http://app:8000;  # Forward request to FastAPI
            break;  # Stop further processing
        }

        # Allow access for the specified IP address
        if ($remote_addr = $allowed_ip) {
            # Forward request to FastAPI for admin IP
            proxy_pass http://app:8000;  # Forward request to FastAPI
            break;  # Stop further processing
        }

        # Check if the Origin header is allowed
        if ($http_origin !~* "^($allowed_origins)$") {
            add_header 'Access-Control-Allow-Origin' 'null';
            return 403;  # Forbidden
        }

        # Set CORS headers for allowed origins
        add_header 'Access-Control-Allow-Origin' $http_origin;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;  # No content
        }

        # Forward the request to FastAPI for allowed origins
        proxy_pass http://app:8000;  # Name of the FastAPI service
    }

    # Common headers for all proxied requests
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # websocket
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;  # Bypass cache for WebSocket connections
}
